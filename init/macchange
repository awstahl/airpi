#!/bin/bash

### BEGIN INIT INFO
# Provides:          macchange
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Start-Before:    $network
# X-Stop-After:      $network
# Short-Description: Service to auto-launch nmap.
# Description:       Service to auto-launch nmap. 
#                    Starts default network and port scans every five minutes.
### END INIT INFO

. /lib/lsb/init-functions

# /etc/init.d/macchange: start and stop the macchange daemon

# Source config if available.  Sane defaults otherwise.
[ -e '/etc/macchange.conf' ] && . /etc/macchange.conf

MCHG=${MCHGBIN:-`which macchanger`}
DEVICE=${DEVICE:-eth0} 2> /dev/null

binchk() {
  if [ -n "$MCHG" -a -x "$MCHG" ]; then
    return 0
  else
    return 1
  fi
}


start() {
  log_daemon_msg "Starting macchange daemon" "macchange"

  if [ binchk ]; then
    log_failure_msg "macchange: unable to locate macchanger binary. Set MCHGBIN in /etc/macchange.conf"
    exit 1
  fi

  ip link show $DEVICE | grep $DEVICE 2>&1 > /dev/null
  if [ $? != 0 ]; then
    log_failure_msg " machchange: device $DEVICE does not appear to exist"
    exit 2
  fi

  ifdown $DEVICE

  if [ -n "$OUI" -a -z "$MAC" ]; then
    A=$((`od -vAn -N4 -tu4 < /dev/urandom`%255))
    B=$((`od -vAn -N4 -tu4 < /dev/urandom`%255))
    C=$((`od -vAn -N4 -tu4 < /dev/urandom`%255))
    MAC=$OUI:`printf "%02X" $A`:`printf "%02X" $B`:`printf "%02X" $C`
  fi 

  CHNG=`$MCHG ${MAC:+-m $MAC} ${RANDOM:+-r} $DEVICE`
  ifup $DEVICE

  echo $CHNG | grep -i "error"
  if [ $? != 0 ]; then
    log_success_msg "macchange: started successfully"
    exit 0
  else
    log_failure_msg "macchange: unable to change mac"
    log_failure_msg $CHNG
    exit 11
  fi
}


stop() {
  log_daemon_msg "Stopping macchange daemon..." "macchange"
  local up

  ip link show $DEVICE | grep "UP"
  if [ $? = 0 ]
  then
    ifdown $DEVICE
    up=true
  fi

  $MCHG -p $DEVICE
  if [ $? = 0 ]; then
    log_daemon_msg "macchange: restored original mac..."
  else
    log_failure_msg "macchange: failed to restore original mac"
    exit 11
  fi

  if [ -n "$up" ]
  then
    ifup $DEVICE
  fi

  ip link show $DEVICE | grep "UP"
  if [ $? = 0 ]
  then
    log_daemon_msg "macchange: restored network..."
    log_success_msg "macchange: all operation stopped."
    exit 0
  else
    log_failure_msg "macchange: failed to restore network"
    exit 12
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|force-reload)
    stop
    start
    ;;
  status)
    if [ ! binchk ]; then
      echo "No machchanger binary found."
      exit 2
    fi
    $MCHG -s $DEVICE
    exit $?
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status}"
    exit 1
esac
exit 0

